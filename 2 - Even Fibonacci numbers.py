'''

Problem 2
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

'''

def even_fibonacci_sum_below(cutoff_number):
  fib_list = [1,1]
  sum = 0
  next_term = 2
  while next_term < cutoff_number:
    if next_term % 2 == 0 and next_term < cutoff_number:
      sum += next_term
    fib_list.append(next_term)
    next_term = fib_list[-1] + fib_list[-2]
  #print("fiblist: " + str(fib_list))
  print("sum:     " + str(sum))

even_fibonacci_sum_below(4000000)

# Note: the fib_list variable could be modified to only keep track of the last two terms of the sequence to minimize space complexity
